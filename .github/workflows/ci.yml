name: DRN.today CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better analysis
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Cache AI models
      uses: actions/cache@v3
      with:
        path: ai/models/
        key: ${{ runner.os }}-models-${{ hashFiles('scripts/download_models.py') }}
        restore-keys: |
          ${{ runner.os }}-models-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Download AI models
      run: python scripts/download_models.py
    
    - name: Run headless validation
      env:
        HEADLESS: true
        CI: true
      run: python home/main.py
    
    - name: Test CLI components
      run: |
        python interface/cli/main.py --help
        python interface/cli/main.py --validate-config
    
    - name: Run unit tests
      run: |
        if [ -d "tests" ]; then
          pytest tests/ --cov=modules --cov-report=xml
        fi
      shell: bash
    
    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml